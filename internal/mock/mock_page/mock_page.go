// Code generated by MockGen. DO NOT EDIT.
// Source: internal/page/page.go

// Package mock_page is a generated GoMock package.
package mock_page

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPage is a mock of Page interface
type MockPage struct {
	ctrl     *gomock.Controller
	recorder *MockPageMockRecorder
}

// MockPageMockRecorder is the mock recorder for MockPage
type MockPageMockRecorder struct {
	mock *MockPage
}

// NewMockPage creates a new mock instance
func NewMockPage(ctrl *gomock.Controller) *MockPage {
	mock := &MockPage{ctrl: ctrl}
	mock.recorder = &MockPageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPage) EXPECT() *MockPageMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockPage) Save() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save")
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockPageMockRecorder) Save() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockPage)(nil).Save))
}

// LoadPage mocks base method
func (m *MockPage) LoadPage() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadPage")
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadPage indicates an expected call of LoadPage
func (mr *MockPageMockRecorder) LoadPage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadPage", reflect.TypeOf((*MockPage)(nil).LoadPage))
}

// Title mocks base method
func (m *MockPage) Title() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Title")
	ret0, _ := ret[0].(string)
	return ret0
}

// Title indicates an expected call of Title
func (mr *MockPageMockRecorder) Title() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Title", reflect.TypeOf((*MockPage)(nil).Title))
}

// body mocks base method
func (m *MockPage) Body() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "body")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// body indicates an expected call of body
func (mr *MockPageMockRecorder) Body() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "body", reflect.TypeOf((*MockPage)(nil).Body))
}
